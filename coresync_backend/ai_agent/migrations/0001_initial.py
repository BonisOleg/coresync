# Generated by Django 5.0.2 on 2025-10-29 18:38

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('services', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('source', models.CharField(choices=[('web_chat', 'Website Chat'), ('atlas_phone', 'Atlas Phone Call'), ('atlas_sms', 'Atlas SMS')], default='web_chat', max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('abandoned', 'Abandoned'), ('error', 'Error')], default='active', max_length=20)),
                ('context_data', models.JSONField(default=dict, help_text='Conversation state, user preferences, detected intents')),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('ended_at', models.DateTimeField(blank=True, null=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('booking', models.ForeignKey(blank=True, help_text='Booking created from this conversation', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ai_conversations', to='services.booking')),
                ('user', models.ForeignKey(blank=True, help_text='Authenticated user or null for anonymous', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ai_conversations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'AI Conversation',
                'verbose_name_plural': 'AI Conversations',
                'ordering': ['-started_at'],
            },
        ),
        migrations.CreateModel(
            name='AtlasLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('webhook_data', models.JSONField(help_text='Complete Atlas webhook payload')),
                ('processed', models.BooleanField(default=False, help_text='Has this webhook been processed?')),
                ('error_message', models.TextField(blank=True, help_text='Error details if processing failed')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('conversation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='atlas_logs', to='ai_agent.conversation')),
            ],
            options={
                'verbose_name': 'Atlas Webhook Log',
                'verbose_name_plural': 'Atlas Webhook Logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AgentAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(choices=[('user_message', 'User Message'), ('agent_response', 'Agent Response'), ('intent_detected', 'Intent Detected'), ('api_call', 'API Call'), ('booking_check', 'Availability Check'), ('payment_request', 'Payment Request'), ('error', 'Error')], max_length=30)),
                ('query', models.TextField(blank=True, help_text='User input or agent query')),
                ('response', models.TextField(blank=True, help_text='Agent response or API result')),
                ('metadata', models.JSONField(default=dict, help_text='Additional data (intent confidence, API params, etc.)')),
                ('processing_time_ms', models.IntegerField(blank=True, help_text='Time taken to process this action (milliseconds)', null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actions', to='ai_agent.conversation')),
            ],
            options={
                'verbose_name': 'Agent Action',
                'verbose_name_plural': 'Agent Actions',
                'ordering': ['timestamp'],
            },
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(fields=['-started_at'], name='ai_agent_co_started_4fb819_idx'),
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(fields=['status', '-started_at'], name='ai_agent_co_status_e7ad12_idx'),
        ),
        migrations.AddIndex(
            model_name='conversation',
            index=models.Index(fields=['user', '-started_at'], name='ai_agent_co_user_id_b190fc_idx'),
        ),
        migrations.AddIndex(
            model_name='atlaslog',
            index=models.Index(fields=['-created_at'], name='ai_agent_at_created_20ddce_idx'),
        ),
        migrations.AddIndex(
            model_name='atlaslog',
            index=models.Index(fields=['processed', '-created_at'], name='ai_agent_at_process_f8efb2_idx'),
        ),
        migrations.AddIndex(
            model_name='agentaction',
            index=models.Index(fields=['conversation', 'timestamp'], name='ai_agent_ag_convers_a131f7_idx'),
        ),
        migrations.AddIndex(
            model_name='agentaction',
            index=models.Index(fields=['action_type', 'timestamp'], name='ai_agent_ag_action__3cdff6_idx'),
        ),
    ]
