# Generated by Django 5.0.2 on 2025-10-29 18:47

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Technician',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specialties', models.JSONField(default=list, help_text="List of specialties: ['massage', 'facial', ...]")),
                ('hourly_rate', models.DecimalField(decimal_places=2, help_text='Hourly rate для payroll calculation', max_digits=6, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('is_active', models.BooleanField(default=True, help_text='Active technician (can receive bookings)')),
                ('google_sheet_row_id', models.IntegerField(blank=True, help_text='Row ID в Google Sheet для sync', null=True)),
                ('bio', models.TextField(blank=True)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('certification_number', models.CharField(blank=True, max_length=100)),
                ('hired_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='technician_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Technician',
                'verbose_name_plural': 'Technicians',
                'ordering': ['user__first_name', 'user__last_name'],
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_recurring', models.BooleanField(default=True, help_text='Recurring weekly або one-time')),
                ('weekday', models.IntegerField(blank=True, choices=[(0, 'Понеділок'), (1, 'Вівторок'), (2, 'Середа'), (3, 'Четвер'), (4, "П'ятниця"), (5, 'Субота'), (6, 'Неділя')], help_text='Weekday (0=Mon, 6=Sun) для recurring', null=True)),
                ('specific_date', models.DateField(blank=True, help_text='Specific date для one-time schedule', null=True)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('is_active', models.BooleanField(default=True, help_text='Active schedule slot')),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('technician', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='technicians.technician')),
            ],
            options={
                'verbose_name': 'Technician Schedule',
                'verbose_name_plural': 'Technician Schedules',
                'ordering': ['technician', 'weekday', 'start_time'],
            },
        ),
        migrations.CreateModel(
            name='WorkLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('hours', models.DecimalField(decimal_places=2, help_text='Hours worked (decimal format, e.g. 8.5)', max_digits=4, validators=[django.core.validators.MinValueValidator(Decimal('0.01')), django.core.validators.MaxValueValidator(Decimal('24.00'))])),
                ('approved', models.BooleanField(default=False, help_text='Manager approval required')),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('synced_to_sheets', models.BooleanField(default=False, help_text='Synced до Google Sheets')),
                ('synced_at', models.DateTimeField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, help_text='Additional notes або break details')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_worklogs', to=settings.AUTH_USER_MODEL)),
                ('technician', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='work_logs', to='technicians.technician')),
            ],
            options={
                'verbose_name': 'Work Log',
                'verbose_name_plural': 'Work Logs',
                'ordering': ['-date', 'technician'],
            },
        ),
        migrations.AddIndex(
            model_name='technician',
            index=models.Index(fields=['is_active', 'created_at'], name='technicians_is_acti_d60372_idx'),
        ),
        migrations.AddIndex(
            model_name='schedule',
            index=models.Index(fields=['technician', 'is_active'], name='technicians_technic_c3240c_idx'),
        ),
        migrations.AddIndex(
            model_name='schedule',
            index=models.Index(fields=['weekday', 'is_active'], name='technicians_weekday_08c52e_idx'),
        ),
        migrations.AddIndex(
            model_name='schedule',
            index=models.Index(fields=['specific_date'], name='technicians_specifi_e47c9f_idx'),
        ),
        migrations.AddIndex(
            model_name='worklog',
            index=models.Index(fields=['technician', '-date'], name='technicians_technic_7c32a1_idx'),
        ),
        migrations.AddIndex(
            model_name='worklog',
            index=models.Index(fields=['approved', '-date'], name='technicians_approve_0614b9_idx'),
        ),
        migrations.AddIndex(
            model_name='worklog',
            index=models.Index(fields=['synced_to_sheets', '-date'], name='technicians_synced__20d672_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='worklog',
            unique_together={('technician', 'date')},
        ),
    ]
